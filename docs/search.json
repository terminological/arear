[{"path":"https://terminological.github.io/arear/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 terminological Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Getting Started with Arear","text":"library collection functions created working COVID-19 pandemic. main focus integrating geospatial demographic, hospital capacity COVID data England, Scotland, Wales Northern Ireland, available different sites methods. UK wide range administrative geographic boundaries different purposes moving different scales resolutions proved necessary. geospatial operations quite time consuming don’t need repeated ability cache results geospatial transformations useful embedded functions.","code":"library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.2 #> ✔ ggplot2   4.0.0     ✔ tibble    3.3.0 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.1.0      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(patchwork) library(arear)  # the usual setup would be to place downloaded files in either a user cache directory or a tempdir.: # however this does not seem to work well in github actions.  options(\"arear.download.dir\" = rappdirs::user_cache_dir(\"arear-download\")) options(\"arear.cache.dir\" = rappdirs::user_cache_dir(\"arear-vignette\"))  ggplot2::theme_set(   ggplot2::theme_bw(base_size = 8)+arear::mapTheme() )"},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"maps-and-capacity-data","dir":"Articles","previous_headings":"","what":"Maps and capacity data","title":"Getting Started with Arear","text":"Getting UK map files relate standardised geographical codes supplied COVID data different devolved administrations wrapped following functions. download, cache rename maps consistent naming convention: March 2019, capacity NHS deal acutely unwell patients added reconfiguration clinical areas cardiac catheterisation labs, surgical recovery units, provide acute respiratory support. also increased addition capacity private providers. model impact COVID regional health services curated data set NHS non-NHS providers. curated data lists hospitals, capacity estimates geographical location:  similar set data bundled library fine grained demographic estimates adults elderly adults start pandemic, associated map shapefile.","code":"arear::listStandardMaps() #>  [1] \"WD11\"            \"WD19\"            \"LSOA11\"          \"MSOA11\"          #>  [5] \"DZ11\"            \"CA19\"            \"HB19\"            \"LHB19\"           #>  [9] \"CTYUA19\"         \"LAD19\"           \"LAD20\"           \"CCG20\"           #> [13] \"NHSER20\"         \"PHEC16\"          \"CTRY19\"          \"LGD12\"           #> [17] \"OUTCODE\"         \"GBR_ISO3166_2\"   \"GBR_ISO3166_3\"   \"GOOGLE_MOBILITY\" map = arear::getMap(\"CTRY19\") nhshospitals = arear::surgecapacity %>%    dplyr::filter(sector == \"NHS Sector\")  ggplot()+   ggplot2::geom_sf(data=map)+   ggplot2::geom_sf(data=nhshospitals,ggplot2::aes(colour=tier1),size=0.5)"},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"containment","dir":"Articles","previous_headings":"","what":"Containment","title":"Getting Started with Arear","text":"Finding hospitals geographic area can done easily sf, getting library can get result conveniently mapping code sets. following allows us assign hospitals specific regions hence work capacity stats different levels geography - case NHS regional level:  hence can estimate capacity NHS regional level:","code":"nhser = arear::getMap(\"NHSER20\") hospitalId2nhser = arear::getContainedIn(   nhshospitals %>% dplyr::group_by(hospitalId, hospitalName),    nhser %>% dplyr::group_by(code,name) ) #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar  hospitalsByNhser = nhshospitals %>%    dplyr::inner_join(hospitalId2nhser,by=c(\"hospitalId\",\"hospitalName\"))  ggplot()+   ggplot2::geom_sf(data=nhser)+   ggplot2::geom_sf(data = hospitalsByNhser,ggplot2::aes(colour=name),size=0.5) nhserBeds = hospitalsByNhser %>%    tibble::as_tibble() %>%    dplyr::group_by(code,name) %>%    dplyr::summarise(     acuteBeds = sum(acuteBeds),     hduBeds = sum(hduBeds)   ) #> `summarise()` has grouped output by 'code'. You can override using the #> `.groups` argument.  nhserBeds #> # A tibble: 7 × 4 #> # Groups:   code [7] #>   code      name                     acuteBeds hduBeds #>   <chr>     <chr>                        <dbl>   <dbl> #> 1 E40000003 London                       11851    1814 #> 2 E40000005 South East                   13033    1485 #> 3 E40000006 South West                    9543    1149 #> 4 E40000007 East of England               9518     747 #> 5 E40000008 Midlands                     17473    1452 #> 6 E40000009 North East and Yorkshire     16133    1458 #> 7 E40000010 North West                   14584     887"},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"intersection","dir":"Articles","previous_headings":"","what":"Intersection","title":"Getting Started with Arear","text":"Mapping different levels granularity needs many many weighted mapping. essentially area intersection. see intersection Public Health England regions, used React study amongst others, NHS regions.","code":"phec = arear::getMap(\"PHEC16\") phecNhser = arear::getIntersection(phec,nhser)  p1 = ggplot2::ggplot()+ggplot2::geom_sf(data=nhser,colour=\"red\") p2 = ggplot2::ggplot()+ggplot2::geom_sf(data=phec,colour=\"blue\") p3 = ggplot2::ggplot()+ggplot2::geom_sf(data=phecNhser)  p1+p2+p3 # Detecting foll coverage can be done by looking at the sum of the fractional areas in the resulting intersection # tmp = phecNhser %>% tibble::as_tibble() %>% dplyr::mutate(frac = intersectionArea/area.y) # tmp %>% dplyr::group_by(name.y) %>% dplyr::summarise(cov = sum(frac))"},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"areal-interpolation","dir":"Articles","previous_headings":"","what":"Areal interpolation","title":"Getting Started with Arear","text":"ways information areas summary capacity figures can convert NHS regional bed capacity figures PHE centre bed capacity figures using areal interpolation, version dplyr friendly operates grouped data:","code":"tmpBedsCount = nhserBeds %>%    tidyr::pivot_longer(cols = c(acuteBeds,hduBeds), names_to=\"type\", values_to=\"beds\") %>%    dplyr::group_by(type)    phecBeds =    arear::interpolateByArea(     tmpBedsCount,     inputShape = nhser, by=\"code\",      interpolateVar = beds,      outputShape = phec %>% dplyr::group_by(name,code)   ) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is FALSE #> Warning: Unknown or uninitialised column: `area`.  phecBeds %>%    dplyr::ungroup() %>%    tidyr::pivot_wider(names_from = type, values_from = beds) #> # A tibble: 9 × 4 #>   name                 code      acuteBeds hduBeds #>   <chr>                <chr>         <dbl>   <dbl> #> 1 East Midlands        E45000016     9915.    821. #> 2 East of England      E45000017     9351.    734. #> 3 London               E45000001    11846.   1813. #> 4 North East           E45000009     4691.    424. #> 5 North West           E45000018    16922.   1111. #> 6 South East           E45000019    13074.   1489. #> 7 South West           E45000020     9530.   1147. #> 8 West Midlands        E45000005     8238.    685. #> 9 Yorkshire and Humber E45000010     8553.    767."},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"geography-as-network","dir":"Articles","previous_headings":"","what":"Geography as network","title":"Getting Started with Arear","text":"spread COVID different areas depends connections areas. Whilst lot commuting transport networks, element due geographical proximity. redistribution hospitalised cases different regions may also driven nearby capacity. library makes easier represent geography network example investigate local authority districts (LAD) weight nodes network number beds LAD. result just recognizably UK lying side. want geographical view network node SF polygon processing can converted centroid co-ordinates used lay graph.","code":"lad = arear::getMap(\"LAD19\")  tmp = arear::surgecapacity %>%    dplyr::group_by(hospitalId, hospitalName, acuteBeds, hduBeds) %>%    arear::getContainedIn(lad %>% dplyr::group_by(code,name)) %>%    dplyr::group_by(code,name) %>% dplyr::summarise(beds = sum(acuteBeds+hduBeds)) #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> `summarise()` has grouped output by 'code'. You can override using the #> `.groups` argument.  nodes = lad %>%    dplyr::left_join(tmp,by=c(\"code\",\"name\")) %>%    dplyr::mutate(beds=ifelse(is.na(beds),0,beds)) %>%    dplyr::ungroup()  edges = lad %>% arear::createNeighbourNetwork()  #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar #> Warning in spdep::poly2nb(shape %>% sf::as_Spatial(), queen = queen): some observations have no neighbours; #> if this seems unexpected, try increasing the snap argument. #> Warning in spdep::poly2nb(shape %>% sf::as_Spatial(), queen = queen): neighbour object has 8 sub-graphs; #> if this sub-graph count seems unexpected, try increasing the snap argument.  # The node_key value is the magic incantation that makes this work: graph = tidygraph::tbl_graph(nodes = nodes,edges=edges,node_key = \"code\")  ggraph::ggraph(graph, layout=\"kk\")+   ggraph::geom_edge_link() +    ggraph::geom_node_point(ggplot2::aes(size=beds))+   ggplot2::scale_size_area(max_size = 4)"},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"preview-a-map-with-points-of-interest-overlaid","dir":"Articles","previous_headings":"","what":"Preview a map with points of interest overlaid","title":"Getting Started with Arear","text":"Previewing zoomable map points interest debugging made simpler preview function:","code":"arear::preview(       shape = lad,       poi=nhshospitals,        poiLabelGlue = \"{hospitalName}\",       poiPopupGlue =          \"<b>{hospitalName}<\/b><ul><li>{trustName}<\/li><li>hdu: {hduBeds}<\/li><li>acute: {acuteBeds}<\/li><\/ul>\" )"},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"estimating-the-catchment-areas-of-hospitals-","dir":"Articles","previous_headings":"","what":"Estimating the catchment areas of hospitals.","title":"Getting Started with Arear","text":"Prior hospital activity data COVID available, developed algorithm predicting catchment areas set hospitals, looking location supply hospital beds local demand terms population. described detail paper: R. J. Challen, G. J. Griffith, L. Lacasa, K. Tsaneva-Atanasova, ‘Algorithmic hospital catchment area estimation using label propagation’, BMC Health Services Research, vol. 22, . 1, p. 828, June 2022, (doi: 10.1186/s12913-022-08127-7). general aim algorithm try distribute supply demand evenly given geographical constraints, keeping areas contiguous.","code":"# this limits to england only NHS trusts. supply = arear::surgecapacity %>%    dplyr::semi_join(arear::apiTrusts, by = c(\"trustId\"=\"area_code\")) %>%   dplyr::mutate(beds = acuteBeds+hduBeds)  demand = arear::uk2019demographicsmap() %>%    dplyr::filter(code %>% stringr::str_starts(\"E\")) %>% # easy way to get england only.   dplyr::left_join(     arear::uk2019adultpopulation %>%        dplyr::select(-name,-codeType), by=\"code\"   )  # devtools::load_all()  catchment = arear::createCatchment(   supplyShape = supply,    supplyIdVar = trustId,    supplyVar = beds,   demandShape = demand,   demandIdVar = code,    demandVar = population,   outputMap = TRUE ) #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar #> Warning in spdep::poly2nb(shape %>% sf::as_Spatial(), queen = queen): some observations have no neighbours; #> if this seems unexpected, try increasing the snap argument. #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> Warning in eval(expr, envir = rlang::caller_env()): More than one supplier was #> found in a single region. These the first value will be picked, and the total #> capacity combined, but as a result the catchment map will be missing some #> values from the supplier list. #> areas remaining: 32624; #> growing into: 1450 #> areas remaining: 32450; growing into: 1676 #> areas remaining: 31785; growing into: 2553 #> areas remaining: 31180; growing into: 3210 #> areas remaining: 30058; growing into: 4046 #> areas remaining: 28873; growing into: 4825 #> areas remaining: 27134; growing into: 5593 #> areas remaining: 25316; growing into: 6280 #> areas remaining: 23043; growing into: 6795 #> areas remaining: 20469; growing into: 7109 #> areas remaining: 18072; growing into: 7241 #> areas remaining: 15443; growing into: 7057 #> areas remaining: 12726; growing into: 6384 #> areas remaining: 10329; growing into: 5557 #> areas remaining: 8493; growing into: 4828 #> areas remaining: 6677; growing into: 3932 #> areas remaining: 5405; growing into: 3201 #> areas remaining: 4199; growing into: 2531 #> areas remaining: 3406; growing into: 2044 #> areas remaining: 2781; growing into: 1662 #> areas remaining: 2133; growing into: 1272 #> areas remaining: 1646; growing into: 1038 #> areas remaining: 1330; growing into: 838 #> areas remaining: 1090; growing into: 651 #> areas remaining: 916; growing into: 542 #> areas remaining: 703; growing into: 433 #> areas remaining: 530; growing into: 306 #> areas remaining: 408; growing into: 247 #> areas remaining: 351; growing into: 206 #> areas remaining: 254; growing into: 130 #> areas remaining: 204; growing into: 108 #> areas remaining: 135; growing into: 60 #> areas remaining: 119; growing into: 51 #> areas remaining: 89; growing into: 37 #> areas remaining: 75; growing into: 33 #> areas remaining: 58; growing into: 12 #> areas remaining: 57; growing into: 11 #> areas remaining: 46; growing into: 2 #> areas remaining: 44; growing into: 0 #> Warning in eval(expr, envir = rlang::caller_env()): No futher areas to grow #> into. Terminating early with missing areas - it looks like 44 areas are not #> connected. #> assembling catchment area map...  catchmentMap = catchment$map %>% dplyr::mutate(bedsPer100K = beds / (population/100000))   ggplot(catchmentMap)+   ggplot2::geom_sf(mapping = ggplot2::aes(fill = bedsPer100K), size=0.1, colour=\"white\")+   ggplot2::scale_fill_viridis_c(limit=c(NA,400), oob=scales::squish) # catchment$map %>% glimpse()"},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"displaying-e-g--london-as-a-popout","dir":"Articles","previous_headings":"","what":"Displaying e.g. London as a popout","title":"Getting Started with Arear","text":"made easier function creates scaled copy mask (defaults London) corner choice","code":"mapWithPopout = catchmentMap %>%    arear::popoutArea(     popoutPosition = \"NE\",      popoutScale = 3,      nudgeX = 0.25,      nudgeY = 0.25   ) #> although coordinates are longitude/latitude, st_union assumes that they are #> planar #> although coordinates are longitude/latitude, st_intersection assumes that they #> are planar #> Warning: attribute variables are assumed to be spatially constant throughout #> all geometries  ggplot(mapWithPopout)+   ggplot2::geom_sf(     mapping = ggplot2::aes(fill = bedsPer100K),      size=0.1, colour=\"white\"   )+   ggplot2::scale_fill_viridis_c(limit=c(NA,400), oob=scales::squish)"},{"path":"https://terminological.github.io/arear/articles/arear.html","id":"facetted-plot-labelling","dir":"Articles","previous_headings":"","what":"Facetted plot labelling","title":"Getting Started with Arear","text":"useful able highlight regions name maps according criteria (usually top N regions chloropleth). useful combined faceting popouts highlight areas. library includes specialised map drawing function allows short label drawn map provides lookup table get full name feature. particularly useful time-series.  One part response labeller function, allows adding labels another map. case create new popout basic LAD19 map apply labels previous step. facets previous map preserved.  library continuously evolving.","code":"# Investigate the timeseries of cases at 4 date points maxDate = as.Date(\"2021-03-01\") dateFacets = seq(maxDate,by = -14,length.out = 6)  # make sure the data is complete and no missing zero values apiTrusts2 = apiTrusts %>%    dplyr::filter(date %in% dateFacets) %>%   tidyr::complete(     tidyr::nesting(area_code,area_type,area_name),     date,     fill=list(value=0)   )  mapTs = mapWithPopout %>%    dplyr::left_join(apiTrusts2, by = c(\"trustId\" = \"area_code\")) #> Warning in sf_column %in% names(g): Detected an unexpected many-to-many relationship between `x` and `y`. #> ℹ Row 1 of `x` matches multiple rows in `y`. #> ℹ Row 56 of `y` matches multiple rows in `x`. #> ℹ If a many-to-many relationship is expected, set `relationship = #>   \"many-to-many\"` to silence this warning.  tmp = arear::plotLabelledMap(   mapTs %>% dplyr::group_by(date),    mapping = ggplot2::aes(fill = value/beds*100),    size=0.1,    colour=\"white\", # Default styles for map   labelMapping = ggplot2::aes(label = trustId, name = area_name),   labels = 4,   labelInset = \"inset\" #this means the labels relevant to the inset are only placed on the inset itself ) #> Warning: st_centroid assumes attributes are constant over geometries #> Warning in st_centroid.sfc(st_geometry(x), of_largest_polygon = #> of_largest_polygon): st_centroid does not give correct centroids for #> longitude/latitude data  tmp$plot+   ggplot2::scale_fill_viridis_c(     option = \"magma\",     limit=c(NA,50),     oob = scales::squish,     name=\"admit/100 bed\"   )+   ggplot2::theme(     legend.title = ggplot2::element_text(size = 6),      legend.text  = ggplot2::element_text(size = 6),     legend.key.size = unit(0.5, \"lines\"),     legend.box.margin = ggplot2::margin()   )+   tmp$legend+   patchwork::plot_layout(ncol=1,heights = c(4,1)) ggplot(     arear::popoutArea(       lad %>% filter(stringr::str_starts(code,\"E\"))     )   )+   geom_sf(size = 0.1)+tmp$labeller()+facet_wrap(vars(date)) #> although coordinates are longitude/latitude, st_union assumes that they are #> planar #> although coordinates are longitude/latitude, st_intersection assumes that they #> are planar #> Warning: attribute variables are assumed to be spatially constant throughout #> all geometries"},{"path":"https://terminological.github.io/arear/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Challen. Author, maintainer.","code":""},{"path":"https://terminological.github.io/arear/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Challen R (2022). arear: Geospatial Convenience Functions Supply Demand Catchment Area Generator. doi:10.5281/zenodo.6576072, R package version 0.1.0, https://terminological.github.io/arear/. Challen, J. R, Griffith, J. G, Lacasa, Lucas, Tsaneva-Atanasova, Krasimira (2022). “Algorithmic Hospital Catchment Area Estimation Using Label Propagation.” BMC Health Services Research, 22(1), 828. ISSN 1472-6963, doi:10.1186/s12913-022-08127-7.","code":"@Manual{,   title = {arear: Geospatial Convenience Functions and a Supply Demand Catchment Area Generator},   year = {2022},   note = {R package version 0.1.0},   url = {https://terminological.github.io/arear/},   doi = {https://doi.org/10.5281/zenodo.6576072},   author = {Rob Challen}, } @Article{,   title = {Algorithmic Hospital Catchment Area Estimation Using Label Propagation},   author = {{Challen} and Robert J. and {Griffith} and Gareth J. and {Lacasa} and {Lucas} and {Tsaneva-Atanasova} and {Krasimira}},   date = {2022-06-27},   journal = {BMC Health Services Research},   year = {2022},   volume = {22},   number = {1},   pages = {828},   issn = {1472-6963},   doi = {10.1186/s12913-022-08127-7}, }"},{"path":"https://terminological.github.io/arear/index.html","id":"arear","dir":"","previous_headings":"","what":"Geospatial Convenience Functions and a Supply Demand Catchment Area Generator","title":"Geospatial Convenience Functions and a Supply Demand Catchment Area Generator","text":"package provides suite geo-spatial functions useful response COVID-19 pandemic UK. provides curated data relevant hospital capacity NHS, demographic data UK beginning pandemic. Coupled range functions simplify management mapping data different administrative geographies, different levels detail involved COVID-19 reporting. mapping community case data hospital admissions data library provides algorithmic hospital catchment area estimation based label propagation, methods described detail paper “Algorithmic hospital catchment area estimation using label propagation”. Many operations package involve time consuming calculations, generally need performed , package incorporates transparent filesystem caching layer speed .","code":""},{"path":"https://terminological.github.io/arear/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Geospatial Convenience Functions and a Supply Demand Catchment Area Generator","text":"arear distributed via ‘r-universe’. arear dependency sf package turn requires gdal, geos proj libraries. can installed MacOS linux using instructions details available sf package sf dependencies installed can install development version arear GitHub following commands: stable releases r-universe : can take time sf already set .","code":"# in debian / ubuntu prior to 18.04 the following ppa is required for arear sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable sudo apt-get -q update # system library dependencies: sudo apt-get install -y make libcurl4-openssl-dev libssl-dev libprotobuf-dev \\    protobuf-compiler libgeos-dev libproj-dev libudunits2-dev libjq-dev \\    libicu-dev libgdal-dev gdal-bin libv8-dev  # or on macOS brew install gdal proj geos protobuf jq # install.packages(\"devtools\") devtools::install_github(\"terminological/arear\") # Enable repository from terminological options(repos = c(   terminological = 'https://terminological.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))  # Download and install arear in R install.packages('arear')"},{"path":"https://terminological.github.io/arear/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Geospatial Convenience Functions and a Supply Demand Catchment Area Generator","text":"Without package accessing maps relevant UK requires knowing look various shape files, managing various differences nomenclature naming conventions. package provides simple interface downloading, extracting, standardising, caching main UK maps. Getting plotting map UK based administrative code use made relatively simple:","code":"library(arear) library(sf)  # list the available maps ids: # arear::listStandardMaps()  map = arear::getMap(\"CTRY19\") nhshospitals = arear::surgecapacity %>% dplyr::filter(sector == \"NHS Sector\")  ggplot()+   geom_sf(data=map)+   geom_sf(data=nhshospitals, aes(colour=tier1))+   arear::mapTheme()"},{"path":"https://terminological.github.io/arear/index.html","id":"next-steps","dir":"","previous_headings":"","what":"Next steps","title":"Geospatial Convenience Functions and a Supply Demand Catchment Area Generator","text":"Please check getting-started vignette examples available functions, including catchment area algorithm.","code":""},{"path":"https://terminological.github.io/arear/reference/apiTrusts.html","id":null,"dir":"Reference","previous_headings":"","what":"NHS trust admissions data from the legacy COVID API from 2021 — apiTrusts","title":"NHS trust admissions data from the legacy COVID API from 2021 — apiTrusts","text":"NHS trust admissions data legacy COVID API 2021","code":""},{"path":"https://terminological.github.io/arear/reference/apiTrusts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NHS trust admissions data from the legacy COVID API from 2021 — apiTrusts","text":"","code":"apiTrusts"},{"path":"https://terminological.github.io/arear/reference/apiTrusts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NHS trust admissions data from the legacy COVID API from 2021 — apiTrusts","text":"72928 line data frame: date ONS code ares area_name name area area_type type area (LSOA, DZ LGD) area_code NHS ODS code metric hospital cases metric_name hospital cases value count","code":""},{"path":"https://terminological.github.io/arear/reference/arcgisServiceInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get feature service information from an argis rest service — arcgisServiceInfo","title":"Get feature service information from an argis rest service — arcgisServiceInfo","text":"Get feature service information argis rest service","code":""},{"path":"https://terminological.github.io/arear/reference/arcgisServiceInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get feature service information from an argis rest service — arcgisServiceInfo","text":"","code":"arcgisServiceInfo(url, ...)"},{"path":"https://terminological.github.io/arear/reference/arcgisServiceInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get feature service information from an argis rest service — arcgisServiceInfo","text":"url base rest service url ... Named arguments passed .cache_download .nocache set TRUE caching disabled .cache location downloaded files .stale long leave file replacing . .extn file name extension","code":""},{"path":"https://terminological.github.io/arear/reference/arcgisServiceInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get feature service information from an argis rest service — arcgisServiceInfo","text":"dataframe available feature map services","code":""},{"path":"https://terminological.github.io/arear/reference/arcgisServiceInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get feature service information from an argis rest service — arcgisServiceInfo","text":"","code":"url = \"https://services1.arcgis.com/ESMARspQHYMw9BZ9/ArcGIS/rest/services\" arcgisServiceInfo(url) #> # A tibble: 3,676 × 3 #>    name                                        type          url                 #>    <chr>                                       <chr>         <chr>               #>  1 ACTY_DEC_1921_EW_BGC                        FeatureServer https://services1.… #>  2 ADCTY_JUN_1921_EW_BGC                       FeatureServer https://services1.… #>  3 ADCTYCB_JUN_1921_EW_BGC                     FeatureServer https://services1.… #>  4 Administrative_Counties_1971_Boundaries_EW  FeatureServer https://services1.… #>  5 Administrative_Districts_1971_Boundaries_EW FeatureServer https://services1.… #>  6 Age_16_24_TTWA                              FeatureServer https://services1.… #>  7 Age_25_34_TTWA                              FeatureServer https://services1.… #>  8 Age_35_49_TTWA                              FeatureServer https://services1.… #>  9 Age_50_64_TTWA                              FeatureServer https://services1.… #> 10 Age_65_74_TTWA                              FeatureServer https://services1.… #> # ℹ 3,666 more rows"},{"path":"https://terminological.github.io/arear/reference/arear-package.html","id":null,"dir":"Reference","previous_headings":"","what":"arear: Geospatial Convenience Functions and a Supply Demand Catchment Area Generator — arear-package","title":"arear: Geospatial Convenience Functions and a Supply Demand Catchment Area Generator — arear-package","text":"Geospatial function collection COVID-19 pandemic. main focus integrating geospatial demographic, hospital capacity COVID data England, Scotland, Wales Northern Ireland, available different sites methods. UK wide range administrative geographic boundaries different purposes moving different scales resolutions proved necessary. geospatial operations quite time consuming need repeated ability cache results geospatial transformations useful embedded functions.","code":""},{"path":[]},{"path":"https://terminological.github.io/arear/reference/arear-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arear: Geospatial Convenience Functions and a Supply Demand Catchment Area Generator — arear-package","text":"Maintainer: Robert Challen rob.challen@bristol.ac.uk (ORCID)","code":""},{"path":"https://terminological.github.io/arear/reference/cache_clear.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear data from the passthrough cache for complex or long running operations — cache_clear","title":"Clear data from the passthrough cache for complex or long running operations — cache_clear","text":"Clear data passthrough cache complex long running operations","code":""},{"path":"https://terminological.github.io/arear/reference/cache_clear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear data from the passthrough cache for complex or long running operations — cache_clear","text":"","code":"cache_clear(   .cache = rappdirs::user_cache_dir(utils::packageName()),   .prefix = \".*\",   interactive = TRUE )"},{"path":"https://terminological.github.io/arear/reference/cache_clear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear data from the passthrough cache for complex or long running operations — cache_clear","text":".cache location cache directory. May get value options(\"ggrrr.cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix regular expression matching prefix cached item, selective clean operations. defaults everything. interactive suppress `sure?` warning FALSE value (defaults TRUE)","code":""},{"path":"https://terminological.github.io/arear/reference/cache_clear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear data from the passthrough cache for complex or long running operations — cache_clear","text":"nothing. called side effects","code":""},{"path":"https://terminological.github.io/arear/reference/catchment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and cache a catchment area map — catchment","title":"Create and cache a catchment area map — catchment","text":"implements label propagation algorithm described paper: R. J. Challen, G. J. Griffith, L. Lacasa, K. Tsaneva-Atanasova, ‘Algorithmic hospital catchment area estimation using label propagation’, BMC Health Services Research, vol. 22, . 1, p. 828, June 2022, doi: 10.1186/s12913-022-08127-7.","code":""},{"path":"https://terminological.github.io/arear/reference/catchment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and cache a catchment area map — catchment","text":"","code":"catchment(   supplyShape,   supplyIdVar = \"code\",   supplyVar,   supplyOutputVars = supplyShape %>% dplyr::groups(),   demandShape,   demandIdVar = \"code\",   demandVar,   growthConstant = 1.2,   bridges = arear::ukconnections,   outputMap = TRUE,   ... )"},{"path":"https://terminological.github.io/arear/reference/catchment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and cache a catchment area map — catchment","text":"supplyShape sf object containing list locations supply points, column containing supply capacity, example NHS hospital sites, bed capacity count supplyIdVar variable name identifier supplier group suppliers. example NHS trust (multiple sites) supplyVar column name supply parameter. number beds hospital. supplyOutputVars (optional - defaults grouping) columns input retained output demandShape sf object geographical map demand surface. example geographical distribution population served, demandIdVar column name unique identifier areas, demandVar column name demand parameter. population region growthConstant growth parameter defines quickly label propagates bridges named list containing extra linkages beyond inferred demandShape topology. used add bridges outputMap export shape file just mapping file ... Named arguments passed .cached .nocache option defeat caching can set globally options(\"cache.disable\"=TRUE) .stale length time days keep cached data considering stale. can also set options(\"cache.stale\")","code":""},{"path":[]},{"path":"https://terminological.github.io/arear/reference/createCatchment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a catchment area map — createCatchment","title":"Create a catchment area map — createCatchment","text":"implements label propagation algorithm described paper: R. J. Challen, G. J. Griffith, L. Lacasa, K. Tsaneva-Atanasova, ‘Algorithmic hospital catchment area estimation using label propagation’, BMC Health Services Research, vol. 22, . 1, p. 828, June 2022, doi: 10.1186/s12913-022-08127-7.","code":""},{"path":"https://terminological.github.io/arear/reference/createCatchment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a catchment area map — createCatchment","text":"","code":"createCatchment(   supplyShape,   supplyIdVar = \"code\",   supplyVar,   supplyOutputVars = supplyShape %>% dplyr::groups(),   demandShape,   demandIdVar = \"code\",   demandVar,   growthConstant = 1.2,   bridges = arear::ukconnections,   outputMap = TRUE )"},{"path":"https://terminological.github.io/arear/reference/createCatchment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a catchment area map — createCatchment","text":"supplyShape sf object containing list locations supply points, column containing supply capacity, example NHS hospital sites, bed capacity count supplyIdVar variable name identifier supplier group suppliers. example NHS trust (multiple sites) supplyVar column name supply parameter. number beds hospital. supplyOutputVars (optional - defaults grouping) columns input retained output demandShape sf object geographical map demand surface. example geographical distribution population served, demandIdVar column name unique identifier areas, demandVar column name demand parameter. population region growthConstant growth parameter defines quickly label propagates bridges named list containing extra linkages beyond inferred demandShape topology. used add bridges outputMap export shape file just mapping file","code":""},{"path":[]},{"path":"https://terminological.github.io/arear/reference/createNeighbourNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a neighbourhood network from touching regions in a map — createNeighbourNetwork","title":"Create a neighbourhood network from touching regions in a map — createNeighbourNetwork","text":"network neighbouring map regions including connections due bridges airports ferry links, defined bridges input.","code":""},{"path":"https://terminological.github.io/arear/reference/createNeighbourNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a neighbourhood network from touching regions in a map — createNeighbourNetwork","text":"","code":"createNeighbourNetwork(   shape,   idVar = \"code\",   bridges = arear::ukconnections,   queen = FALSE,   ... )"},{"path":"https://terminological.github.io/arear/reference/createNeighbourNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a neighbourhood network from touching regions in a map — createNeighbourNetwork","text":"shape `sf` object idVar column containing coded identifier map bridges df following columns: `name` `start.lat` `start.long` `end.lat` `end.long` defining connections non touching shapes (e.g. bridges / ferries / etc.) queen - include neighbouring areas touch corners, defaults false. ... Named arguments passed .cached .nocache option defeat caching can set globally options(\"cache.disable\"=TRUE) .stale length time days keep cached data considering stale. can also set options(\"cache.stale\")","code":""},{"path":"https://terminological.github.io/arear/reference/createNeighbourNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a neighbourhood network from touching regions in a map — createNeighbourNetwork","text":"edge list ids columns","code":""},{"path":"https://terminological.github.io/arear/reference/createNeighbourNetwork.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a neighbourhood network from touching regions in a map — createNeighbourNetwork","text":"","code":"edges = createNeighbourNetwork(   shape = arear::testdata$grid11x11,   idVar = \"id\" ) #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar  # in regular grid each cell has 4 neighbours except the edges and corners # we loose 1 per edge  nrow(edges) == 11*11*4-4*11 #> [1] TRUE  queens = createNeighbourNetwork(   shape = arear::testdata$grid11x11,   idVar = \"id\",   queen = TRUE ) #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar  # each cell has 8 queen neighbours # except edge pieces which have 3 less, and corners which have 5 less. nrow(queens) == 11*11*8 - 4*9*3 - 4*5 #> [1] TRUE"},{"path":"https://terminological.github.io/arear/reference/dot-cache_clear.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":"Clear data passthrough cache complex long running operations","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_clear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":"","code":".cache_clear(   .cache = rappdirs::user_cache_dir(utils::packageName()),   .prefix = \".*\",   interactive = TRUE )"},{"path":"https://terminological.github.io/arear/reference/dot-cache_clear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":".cache location cache directory. May get value options(\"ggrrr.cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix regular expression matching prefix cached item, selective clean operations. defaults everything. interactive suppress `sure?` warning FALSE value (defaults TRUE)","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_clear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":"nothing. called side effects","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_delete_stale.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete stale files in a cache — .cache_delete_stale","title":"Delete stale files in a cache — .cache_delete_stale","text":"Staleness determined number days 2am current day current time-zone. item cached one day becomes stale 2am day cached. time configurable option(cache.time_day_starts = 0) midnight. Automated analysis using caches updated data ensure analysis cross time point otherwise may end using old data.","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_delete_stale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete stale files in a cache — .cache_delete_stale","text":"","code":".cache_delete_stale(   .cache = rappdirs::user_cache_dir(utils::packageName()),   .prefix = \".*\",   .stale = Inf )"},{"path":"https://terminological.github.io/arear/reference/dot-cache_delete_stale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete stale files in a cache — .cache_delete_stale","text":".cache location cache directory. May get value options(\"cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix name operation can namespace cached files selective clean operations .stale length time days keep cached data considering stale.","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_delete_stale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete stale files in a cache — .cache_delete_stale","text":"nothing. called side effects.","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a file into a local cache. — .cache_download","title":"Download a file into a local cache. — .cache_download","text":"function copies remote file local cache makes sure reused.","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a file into a local cache. — .cache_download","text":"","code":".cache_download(   url,   ...,   .nocache = getOption(\"cache.disable\", default = FALSE),   .cache = rappdirs::user_cache_dir(utils::packageName()),   .stale = Inf,   .extn = NULL )"},{"path":"https://terminological.github.io/arear/reference/dot-cache_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a file into a local cache. — .cache_download","text":"url url download ... Named arguments passed utils::download.file method Method used downloading files.  Current     download methods \"internal\", \"libcurl\",     \"wget\", \"curl\" \"wininet\" (Windows     ), value \"auto\": see ‘Details’     ‘Note’. method can also set option     \"download.file.method\": see options(). quiet TRUE, suppress status messages (),     progress bar. mode character.  mode write file.  Useful     values \"w\", \"wb\" (binary), \"\" (append)     \"ab\".  used methods \"wget\" \"curl\".     See also ‘Details’, notably using \"wb\" Windows. cacheOK logical.  server-side cached value acceptable? extra character vector additional command-line arguments     \"wget\" \"curl\" methods. headers named character vector additional HTTP headers     use HTTP[S] requests.  ignored non-HTTP[S] URLs.      User-Agent header taken HTTPUserAgent option     (see options) automatically used first header. ... allow additional arguments passed, unused. .nocache set TRUE caching disabled .cache location downloaded files .stale long leave file replacing . .extn file name extension","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a file into a local cache. — .cache_download","text":"path downloaded file","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache a post request — .cache_post","title":"Cache a post request — .cache_post","text":"function copies remote file local cache makes sure reused.","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache a post request — .cache_post","text":"","code":".cache_post(   url,   body,   as = c(\"text\", \"raw\", \"parsed\", \"httr\"),   ...,   .nocache = getOption(\"cache.disable\", default = FALSE),   .cache = rappdirs::user_cache_dir(utils::packageName()),   .stale = Inf )"},{"path":"https://terminological.github.io/arear/reference/dot-cache_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache a post request — .cache_post","text":"url url download body named list POST data response delivered? ... Named arguments passed httr::POST config Additional configuration settings http authentication (authenticate()), additional headers (add_headers()), cookies (set_cookies()) etc. See config() full details list helpers. ... named parameters, query, path, etc, passed modify_url(). Unnamed parameters combined config(). encode body named list, encoded? Can one form (application/x-www-form-urlencoded), multipart, (multipart/form-data), json (application/json). \"multipart\", list elements can strings objects created upload_file(). \"form\", elements coerced strings escaped, use () prevent double-escaping. \"json\", parameters automatically \"unboxed\" (.e. length 1 vectors converted scalars). preserve length 1 vector vector, wrap (). \"raw\", either character raw vector. need make sure set content_type() . handle handle use request. supplied, retrieved reused handle_pool() based scheme, hostname port url. default httr requests scheme/host/port combo. substantially reduces connection time, ensures cookies maintained multiple requests host. See handle_pool() details. .nocache set TRUE caching disabled .cache location downloaded files .stale long leave file replacing .","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cache_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache a post request — .cache_post","text":"result query","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cached.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple pass-through cache for complex or long running operations — .cached","title":"A simple pass-through cache for complex or long running operations — .cached","text":"executes expr saves output RDS file indexed code expr hash input variables (contain variable inputs)","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cached.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple pass-through cache for complex or long running operations — .cached","text":"","code":".cached(   .expr,   ...,   .nocache = getOption(\"cache.disable\", default = FALSE),   .cache = rappdirs::user_cache_dir(utils::packageName()),   .prefix = \"cached\",   .stale = Inf )"},{"path":"https://terminological.github.io/arear/reference/dot-cached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple pass-through cache for complex or long running operations — .cached","text":".expr code output requires caching. return value create side effects change global variables. ... inputs code expr depends changes require code re-running, Sys.Date() .nocache option defeat caching can set globally options(\"cache.disable\"=TRUE) .cache location cache directory. May get value options(\"cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix name operation can namespace cached files selective clean operations .stale length time days keep cached data considering stale. can also set options(\"cache.stale\")","code":""},{"path":"https://terminological.github.io/arear/reference/dot-cached.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A simple pass-through cache for complex or long running operations — .cached","text":"output .expr usually value","code":""},{"path":"https://terminological.github.io/arear/reference/downloadGeojson.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a geojson url, optionally simplifies and cache the result — downloadGeojson","title":"Download a geojson url, optionally simplifies and cache the result — downloadGeojson","text":"Download geojson url, optionally simplifies cache result","code":""},{"path":"https://terminological.github.io/arear/reference/downloadGeojson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a geojson url, optionally simplifies and cache the result — downloadGeojson","text":"","code":"downloadGeojson(geojsonUrl, simplify = FALSE, ...)"},{"path":"https://terminological.github.io/arear/reference/downloadGeojson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a geojson url, optionally simplifies and cache the result — downloadGeojson","text":"geojsonUrl URL geojson resource ESRI feature service layer simplify want simplify map ... Named arguments passed featureServerLayerQuery SQL query (defaults whole map) select columns return (see featureServerLayerInfo()) limit maximum rows return crs coordinate reference system queryParams additional query parameters passed request feature server ... Named arguments passed .cache_post body named list POST data response delivered? Named arguments passed .cached .nocache option defeat caching can set globally options(\"cache.disable\"=TRUE) .stale length time days keep cached data considering stale. can also set options(\"cache.stale\")","code":""},{"path":"https://terminological.github.io/arear/reference/downloadGeojson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a geojson url, optionally simplifies and cache the result — downloadGeojson","text":"`sf` object geoJson","code":""},{"path":"https://terminological.github.io/arear/reference/downloadGeojson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a geojson url, optionally simplifies and cache the result — downloadGeojson","text":"","code":"# The ONS UK country files: if (interactive()) {   svc = \"https://services1.arcgis.com/ESMARspQHYMw9BZ9/ArcGIS/rest/services\"   fs = sprintf(\"%s/%s\",svc,\"Countries_December_2024_Boundaries_UK_BUC/FeatureServer\")   layer = sprintf(\"%s/%s\",fs,\"0\")   map = downloadGeojson(layer)   map %>% dplyr::glimpse() }"},{"path":"https://terminological.github.io/arear/reference/downloadMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a shape file map — downloadMap","title":"Download a shape file map — downloadMap","text":"function downloads caches zipped shape file map, unpacks , finds correct shape file layer optionally simplifies converts `sf`.","code":""},{"path":"https://terminological.github.io/arear/reference/downloadMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a shape file map — downloadMap","text":"","code":"downloadMap(zipUrl, mapName = NULL, simplify = FALSE, ...)"},{"path":"https://terminological.github.io/arear/reference/downloadMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a shape file map — downloadMap","text":"zipUrl URL zipped shape file mapName (optional) layer name map name - `\"xyz\"` zip file contains `\"xyz.shp\"`. Usually one `.shp` file  zip file, default picked set. simplify want simplify map? ... Named arguments passed .cached .nocache option defeat caching can set globally options(\"cache.disable\"=TRUE) .stale length time days keep cached data considering stale. can also set options(\"cache.stale\")","code":""},{"path":"https://terminological.github.io/arear/reference/downloadMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a shape file map — downloadMap","text":"`sf` object containing map","code":""},{"path":"https://terminological.github.io/arear/reference/downloadMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a shape file map — downloadMap","text":"","code":"if (FALSE) { # \\dontrun{ downloadMap(   zipUrl=\"https://bit.ly/3A9TnR1\" ) } # }"},{"path":"https://terminological.github.io/arear/reference/featureServerInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get layer information from a feature service — featureServerInfo","title":"Get layer information from a feature service — featureServerInfo","text":"Get layer information feature service","code":""},{"path":"https://terminological.github.io/arear/reference/featureServerInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get layer information from a feature service — featureServerInfo","text":"","code":"featureServerInfo(url, ...)"},{"path":"https://terminological.github.io/arear/reference/featureServerInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get layer information from a feature service — featureServerInfo","text":"url feature service url ... Named arguments passed .cache_download .nocache set TRUE caching disabled .cache location downloaded files .stale long leave file replacing . .extn file name extension","code":""},{"path":"https://terminological.github.io/arear/reference/featureServerInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get layer information from a feature service — featureServerInfo","text":"dataframe layers","code":""},{"path":"https://terminological.github.io/arear/reference/featureServerInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get layer information from a feature service — featureServerInfo","text":"","code":"svc = \"https://services1.arcgis.com/ESMARspQHYMw9BZ9/ArcGIS/rest/services\" fs = sprintf(\"%s/%s\",svc,\"Countries_December_2024_Boundaries_UK_BUC/FeatureServer\") url = sprintf(\"%s/%s\",fs,\"0\") featureServerInfo(fs) #> # A tibble: 1 × 9 #>      id name       parentLayerId defaultVisibility subLayerIds minScale maxScale #>   <int> <chr>              <int> <lgl>             <lgl>          <int>    <int> #> 1     0 CTRY_DEC_…            -1 TRUE              NA                 0        0 #> # ℹ 2 more variables: type <chr>, geometryType <chr>"},{"path":"https://terminological.github.io/arear/reference/featureServerLayerInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get field information from a feature service layer. — featureServerLayerInfo","title":"Get field information from a feature service layer. — featureServerLayerInfo","text":"Get field information feature service layer.","code":""},{"path":"https://terminological.github.io/arear/reference/featureServerLayerInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get field information from a feature service layer. — featureServerLayerInfo","text":"","code":"featureServerLayerInfo(url, ...)"},{"path":"https://terminological.github.io/arear/reference/featureServerLayerInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get field information from a feature service layer. — featureServerLayerInfo","text":"url feature service layer url. layer specified first one selected. ... Named arguments passed .cache_download .nocache set TRUE caching disabled .cache location downloaded files .stale long leave file replacing . .extn file name extension","code":""},{"path":"https://terminological.github.io/arear/reference/featureServerLayerInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get field information from a feature service layer. — featureServerLayerInfo","text":"dataframe field names selected layer","code":""},{"path":"https://terminological.github.io/arear/reference/featureServerLayerInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get field information from a feature service layer. — featureServerLayerInfo","text":"","code":"svc = \"https://services1.arcgis.com/ESMARspQHYMw9BZ9/ArcGIS/rest/services\" fs = sprintf(\"%s/%s\",svc,\"Countries_December_2024_Boundaries_UK_BUC/FeatureServer\") layer = sprintf(\"%s/%s\",fs,\"0\") featureServerLayerInfo(layer) #> # A tibble: 11 × 9 #>    name         type  alias sqlType nullable editable domain defaultValue length #>    <chr>        <chr> <chr> <chr>   <lgl>    <lgl>    <lgl>  <chr>         <int> #>  1 FID          esri… FID   sqlTyp… FALSE    FALSE    NA     NA               NA #>  2 CTRY24CD     esri… CTRY… sqlTyp… TRUE     TRUE     NA     NA                9 #>  3 CTRY24NM     esri… CTRY… sqlTyp… TRUE     TRUE     NA     NA               16 #>  4 CTRY24NMW    esri… CTRY… sqlTyp… TRUE     TRUE     NA     NA               17 #>  5 BNG_E        esri… BNG_E sqlTyp… TRUE     TRUE     NA     NA               NA #>  6 BNG_N        esri… BNG_N sqlTyp… TRUE     TRUE     NA     NA               NA #>  7 LONG         esri… LONG  sqlTyp… TRUE     TRUE     NA     NA               NA #>  8 LAT          esri… LAT   sqlTyp… TRUE     TRUE     NA     NA               NA #>  9 Shape__Area  esri… Shap… sqlTyp… TRUE     FALSE    NA     NA               NA #> 10 Shape__Leng… esri… Shap… sqlTyp… TRUE     FALSE    NA     NA               NA #> 11 GlobalID     esri… Glob… sqlTyp… FALSE    FALSE    NA     NEWID() WIT…     38"},{"path":"https://terminological.github.io/arear/reference/featureServerLayerQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute and cache a query on a Feature Server — featureServerLayerQuery","title":"Execute and cache a query on a Feature Server — featureServerLayerQuery","text":"Allow basic filtering queries moment. cache results handles multipart transfers.","code":""},{"path":"https://terminological.github.io/arear/reference/featureServerLayerQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute and cache a query on a Feature Server — featureServerLayerQuery","text":"","code":"featureServerLayerQuery(   url,   where = \"1 = 1\",   select = \"*\",   ...,   limit = NULL,   crs = 4326,   queryParams = list() )"},{"path":"https://terminological.github.io/arear/reference/featureServerLayerQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute and cache a query on a Feature Server — featureServerLayerQuery","text":"url URL feature service layer (layer known first feature layer used) SQL query (defaults whole map) select columns return (see featureServerLayerInfo()) ... Named arguments passed .cache_post body named list POST data response delivered? limit maximum rows return crs coordinate reference system queryParams additional query parameters passed request feature server","code":""},{"path":"https://terminological.github.io/arear/reference/featureServerLayerQuery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute and cache a query on a Feature Server — featureServerLayerQuery","text":"`sf` query result","code":""},{"path":"https://terminological.github.io/arear/reference/featureServerLayerQuery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute and cache a query on a Feature Server — featureServerLayerQuery","text":"","code":"svc = \"https://services1.arcgis.com/ESMARspQHYMw9BZ9/ArcGIS/rest/services\" fs = sprintf(\"%s/%s\",svc,\"Countries_December_2024_Boundaries_UK_BUC/FeatureServer\") layer = sprintf(\"%s/%s\",fs,\"0\")  # default all 4 nations: sf = featureServerLayerQuery(layer) cat(sf$CTRY24CD) #> E92000001 N92000002 S92000003 W92000004  # england only sf2 = featureServerLayerQuery(layer, where=\"CTRY24CD LIKE 'E%'\") cat(sf2$CTRY24CD) #> E92000001  if (interactive()) {   # Download the first 4000 LSOAs. There are lots of LSOAs and this   # query has to be paginated. This also shows the limit feature   # and the verbose output of the cache.   lsoa = sprintf(\"%s/%s\",svc,\"LSOA_DEC_2021_EW_NC_v3/FeatureServer/0\")   withr::with_options(list(cache.verbose=TRUE), {     sf_lsoa = featureServerLayerQuery(lsoa, limit = 4000)   })    cat(nrow(sf_lsoa)) }"},{"path":"https://terminological.github.io/arear/reference/getContainedIn.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a mapping table between 2 `sf` dataframes. — getContainedIn","title":"Generate a mapping table between 2 `sf` dataframes. — getContainedIn","text":"assumes unique keys defined input output shapes column grouping outputs mapping table input output groups. input related output containment. .e. result input wholly contained within output shape","code":""},{"path":"https://terminological.github.io/arear/reference/getContainedIn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a mapping table between 2 `sf` dataframes. — getContainedIn","text":"","code":"getContainedIn(   inputShape,   outputShape,   inputVars = inputShape %>% dplyr::groups(),   outputVars = outputShape %>% dplyr::groups(),   suffix = c(\".x\", \".y\") )"},{"path":"https://terminological.github.io/arear/reference/getContainedIn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a mapping table between 2 `sf` dataframes. — getContainedIn","text":"inputShape - sf containing points interest (shapes) outputShape - sf containing polygons locate input . inputVars - defines columns input want retain (dplyr::vars(...) list). grouping uniquely identify row. present use current grouping inputShape. outputVars - defines columns output want retain (dplyr::vars(...) list). grouping uniquely identify row. present use current grouping outputShape. suffix - suffix duplicated columns per dplyr::inner_join()","code":""},{"path":"https://terminological.github.io/arear/reference/getContainedIn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a mapping table between 2 `sf` dataframes. — getContainedIn","text":"- mapping dataframe relating `inputVars` columns `outputVars` columns","code":""},{"path":"https://terminological.github.io/arear/reference/getContainedIn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a mapping table between 2 `sf` dataframes. — getContainedIn","text":"","code":"# find the hospitals in a given area. mapping = getContainedIn(   inputShape = arear::surgecapacity,   outputShape = arear::ukcovidmap(),   inputVars = dplyr::vars(hospitalId),   outputVars = dplyr::vars(code) ) #> although coordinates are longitude/latitude, st_contains assumes that they are #> planar"},{"path":"https://terminological.github.io/arear/reference/getIntersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersection of 2 shapes — getIntersection","title":"Intersection of 2 shapes — getIntersection","text":"get intersection maps ids. Caches result working directory.","code":""},{"path":"https://terminological.github.io/arear/reference/getIntersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersection of 2 shapes — getIntersection","text":"","code":"getIntersection(   inputShape,   outputShape,   suffix = c(\".x\", \".y\"),   recalcArea = TRUE,   ... )"},{"path":"https://terminological.github.io/arear/reference/getIntersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersection of 2 shapes — getIntersection","text":"inputShape - input sf outputShape - output sf suffix - suffix duplicated columns per dplyr::inner_join() recalcArea - need area intersected shape (e.g. areal interpolation) ... passed .cached() (cache control) - relevant nocache = TRUE prevents precalculated","code":""},{"path":"https://terminological.github.io/arear/reference/getIntersection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersection of 2 shapes — getIntersection","text":"sf object representing intersection input output shapes.","code":""},{"path":"https://terminological.github.io/arear/reference/getMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets maps for which the metadata is known. — getMap","title":"Gets maps for which the metadata is known. — getMap","text":"map needs downloaded shapefile stored temporarily. location download directory can set option(\"arear.download.dir\" = \"~/.)","code":""},{"path":"https://terminological.github.io/arear/reference/getMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets maps for which the metadata is known. — getMap","text":"","code":"getMap(mapId = names(sources)[1], sources = arear::mapsources, ...)"},{"path":"https://terminological.github.io/arear/reference/getMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets maps for which the metadata is known. — getMap","text":"mapId either: name default map sources : named list map sources. map source entry must named list containing following information: - `url`: download URL map - `mapName`: either `geojson` shapes layer name containing map.   given first shape file layer used. - `simplify` (opt: boolean) want map simplified - `source`: (opt) URL best represents source map - `license`: (opt) license map - `nameCol`: (opt) column containing name - `codeCol`: (opt) column containing id code - `altCodeCol`: (opt) alternative code columns see `arear::mapsources` example ... Named arguments passed standardiseMap codeCol name column containing id code nameCol name column containing label (optional - defaults codeCol) altCodeCol optional column name containing another code type codeType \"type\" code - optional. defaults NA ... used. Named arguments passed .cached .nocache option defeat caching can set globally options(\"cache.disable\"=TRUE) .stale length time days keep cached data considering stale. can also set options(\"cache.stale\")","code":""},{"path":"https://terminological.github.io/arear/reference/getMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets maps for which the metadata is known. — getMap","text":"standard sf map","code":""},{"path":"https://terminological.github.io/arear/reference/getMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets maps for which the metadata is known. — getMap","text":"","code":"if (interactive()) {   map = getMap(\"NHSER20\")   map %>% dplyr::glimpse() }"},{"path":"https://terminological.github.io/arear/reference/interpolateByArea.html","id":null,"dir":"Reference","previous_headings":"","what":"interpolate a variable from one set of shapes to another — interpolateByArea","title":"interpolate a variable from one set of shapes to another — interpolateByArea","text":"interpolate variable one set shapes another","code":""},{"path":"https://terminological.github.io/arear/reference/interpolateByArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interpolate a variable from one set of shapes to another — interpolateByArea","text":"","code":"interpolateByArea(   inputDf,   inputShape,   by,   interpolateVar,   outputShape,   inputVars = inputDf %>% dplyr::groups(),   outputVars = outputShape %>% dplyr::groups(),   aggregateFn = sum )"},{"path":"https://terminological.github.io/arear/reference/interpolateByArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interpolate a variable from one set of shapes to another — interpolateByArea","text":"inputDf - input data frame containing variable(s) interest interpolate. Stratification variable can achieved grouping inputShape - input sf map, - columns use join inputDf map provided inputShape. format dplyr join specification. interpolateVar - column want areal interpolation , outputShape - output map may grouped desired output, inputVars - list columns inputDf (`dplyr::vars(...)` list) define stratification inputDf desired output. Defaults grouping inputDf outputVars - list columns outputShape (`dplyr::vars(...)` list) want preserved output, defined grouping outputShape aggregateFn - function applied area weighted components interpolateVar - defaults sum","code":""},{"path":"https://terminological.github.io/arear/reference/interpolateByArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interpolate a variable from one set of shapes to another — interpolateByArea","text":"dataframe containing grouping columns `inputVars`   `outputVars`, interpolated value `interpolateVar`","code":""},{"path":"https://terminological.github.io/arear/reference/listStandardMaps.html","id":null,"dir":"Reference","previous_headings":"","what":"List the standard maps available to download — listStandardMaps","title":"List the standard maps available to download — listStandardMaps","text":"List standard maps available download","code":""},{"path":"https://terminological.github.io/arear/reference/listStandardMaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the standard maps available to download — listStandardMaps","text":"","code":"listStandardMaps()"},{"path":"https://terminological.github.io/arear/reference/listStandardMaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the standard maps available to download — listStandardMaps","text":"vector map names","code":""},{"path":"https://terminological.github.io/arear/reference/listStandardMaps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the standard maps available to download — listStandardMaps","text":"","code":"# example code listStandardMaps() #>  [1] \"WD11\"            \"WD19\"            \"LSOA11\"          \"MSOA11\"          #>  [5] \"DZ11\"            \"CA19\"            \"HB19\"            \"LHB19\"           #>  [9] \"CTYUA19\"         \"LAD19\"           \"LAD20\"           \"CCG20\"           #> [13] \"NHSER20\"         \"PHEC16\"          \"CTRY19\"          \"LGD12\"           #> [17] \"OUTCODE\"         \"GBR_ISO3166_2\"   \"GBR_ISO3166_3\"   \"GOOGLE_MOBILITY\""},{"path":"https://terminological.github.io/arear/reference/londonShape.html","id":null,"dir":"Reference","previous_headings":"","what":"An outline of the London NHSER region for use as a mask — londonShape","title":"An outline of the London NHSER region for use as a mask — londonShape","text":"Data available open government licence: http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/","code":""},{"path":"https://terminological.github.io/arear/reference/londonShape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An outline of the London NHSER region for use as a mask — londonShape","text":"","code":"londonShape"},{"path":"https://terminological.github.io/arear/reference/londonShape.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An outline of the London NHSER region for use as a mask — londonShape","text":"sf geometry 1 row: codeType NHSER code E4000003 - NHSER code London name London altCode NA area area geometry outline","code":""},{"path":"https://terminological.github.io/arear/reference/mapTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"A map theme to remove extraneous clutter — mapTheme","title":"A map theme to remove extraneous clutter — mapTheme","text":"map theme remove extraneous clutter","code":""},{"path":"https://terminological.github.io/arear/reference/mapTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A map theme to remove extraneous clutter — mapTheme","text":"","code":"mapTheme()"},{"path":"https://terminological.github.io/arear/reference/mapTheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A map theme to remove extraneous clutter — mapTheme","text":"","code":"ggplot2::ggplot(arear::testdata$gridDemand)+   ggplot2::geom_sf(ggplot2::aes(fill=demand))+   mapTheme()"},{"path":"https://terminological.github.io/arear/reference/mapsources.html","id":null,"dir":"Reference","previous_headings":"","what":"Locations of UK and international shapefiles relevant to COVID — mapsources","title":"Locations of UK and international shapefiles relevant to COVID — mapsources","text":"list URLs get maps, metadata maps shapefiles column labelling.","code":""},{"path":"https://terminological.github.io/arear/reference/mapsources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locations of UK and international shapefiles relevant to COVID — mapsources","text":"","code":"mapsources"},{"path":"https://terminological.github.io/arear/reference/mapsources.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Locations of UK and international shapefiles relevant to COVID — mapsources","text":"list : source human readable location map url web location downloadable map shapefile mapName name map contained shapefile (can contain multiple maps) codeCol name shapefile column containing code area nameCol name shapefile column containing name area altCodeCol name shapefile column containing alternative code area simplify map simplified loaded? license license terms","code":""},{"path":"https://terminological.github.io/arear/reference/nse-force.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — :=","title":"Pipe operator — :=","text":"See rlang::%>% details.","code":""},{"path":"https://terminological.github.io/arear/reference/nse-force.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — :=","text":"","code":"`:=`(x, y)"},{"path":"https://terminological.github.io/arear/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://terminological.github.io/arear/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://terminological.github.io/arear/reference/plotLabelledMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a map, usually as a chloropleth, with selected areas labelled. — plotLabelledMap","title":"Create a map, usually as a chloropleth, with selected areas labelled. — plotLabelledMap","text":"can used pick specific highlighted regions based filter, label map using short code, provide tabular lookup label full name.","code":""},{"path":"https://terminological.github.io/arear/reference/plotLabelledMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a map, usually as a chloropleth, with selected areas labelled. — plotLabelledMap","text":"","code":"plotLabelledMap(   data,   mapping,   ...,   labelMapping,   labelStyle = list(),   labelSort = NULL,   labels = 6,   labelSize = 6,   tableSize = 6,   labelInset = c(\"both\", \"inset\", \"main\") )"},{"path":"https://terminological.github.io/arear/reference/plotLabelledMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a map, usually as a chloropleth, with selected areas labelled. — plotLabelledMap","text":"data sf object data . using facets grouped. (grouped faceting automatically added) mapping aesthetics passed `geom_sf` ... additional formatting parameters passed `geom_sf` (defaults thin grey line edge maps.) labelMapping aesthetics label layer. include aesthetics apply `ggrepel::geom_label_repel` `x`,`y`.. must include label aesthetic (go map) name aesthetic (go lookup table) labelStyle additional formatting parameters passed `ggrepel::geom_label_repel`. Defaults blue label light transparent background works dark maps. `list(segment.colour = \"cyan\", colour=\"cyan\", fill==\"#000000A0\")` give cyan label dark transparent background might work lighter maps. labelSort (optional) sort labels . defaults descending order variable determines fill main map. simple expression might use `dplyr::arrange` can include `desc` descending. labels many labels want, per facet. default 6 good small number facets. overridden `labelFilter` specified labelSize points. tableSize labels data facets assembled table ggplot/patchwork object. defines font size (points) table. config allowed. labelInset map zoomed inset produced `popoutArea()`, areas main map inset may wish label zoomed area \"inset\", unzoomed area \"main\" map \"\" (default).","code":""},{"path":"https://terminological.github.io/arear/reference/plotLabelledMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a map, usually as a chloropleth, with selected areas labelled. — plotLabelledMap","text":"list containing 4 items. Plot legend may added together   form ggplot patchwork. e.g. `p = plotLabelledMap(...)`   `p$plot+ggplot2::scale_fill_viridis_c()+ggplot2::facet_wrap(dplyr::vars(...))+p$legend+patchwork::plot_annotation(taglevels=\"\")`   actually show map. plot ggplot object showing chloropleth (usually)   defined main mapping aesthetics, overlaid labelling layer   defined `labelMapping` label aesthetic. include fill   colour scales probably want `plot+ggplot2::scale_fill_viridis_c()`   something similar define fill legend ggplot patchwork containing lookup table labels   data (determined `labelMapping` aesthetics) labelDf filtered dataframe labels appearing   labelling layer. .x .y columns added show   label placed main map. .label .name show labels   names respectively labeller function returns layer labels, formatted   way main map. labeller function takes optional xVar   yVar parameter columns sf object. define   x y aesthetics labeller default position   main map. labeller function can used add labels layer   different map, different graph. might useful want   combine cartograms points interest consistently   labelled.","code":""},{"path":"https://terminological.github.io/arear/reference/plotLabelledMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a map, usually as a chloropleth, with selected areas labelled. — plotLabelledMap","text":"","code":"# create some test data: tmp = dplyr::bind_rows(lapply(1:4,   function(i) testdata$diamond11x11 %>%     dplyr::mutate(set = sprintf(\"set %d\",i), value = runif(x) ))) %>% dplyr::group_by(set) %>%   dplyr::mutate(name = sprintf(\"%s-%s\", letters[x+6], letters[y+6]))  ggplot2::ggplot(tmp)+ggplot2::geom_sf(ggplot2::aes(fill = value))+   ggplot2::facet_wrap(~set)   p = plotLabelledMap(   data = tmp,   mapping = ggplot2::aes(fill = value),   labelMapping = ggplot2::aes(label=name,percent=sprintf(\"%1.1f%%\",value*100)),   labels = 2 ) #> Warning: st_centroid assumes attributes are constant over geometries #> Warning: st_centroid does not give correct centroids for longitude/latitude data  p$plot+p$legend"},{"path":"https://terminological.github.io/arear/reference/popoutArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a magnified pop-out panel of a map — popoutArea","title":"Create a magnified pop-out panel of a map — popoutArea","text":"Create new map pop-panel show areas high density people example. Defaults work well London England map.","code":""},{"path":"https://terminological.github.io/arear/reference/popoutArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a magnified pop-out panel of a map — popoutArea","text":"","code":"popoutArea(   shape,   popoutShape = arear::londonShape,   popoutPosition = c(\"NE\", \"NW\", \"SE\", \"SW\"),   popoutScale = 3,   nudgeX = 0.25,   nudgeY = 0.25 )"},{"path":"https://terminological.github.io/arear/reference/popoutArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a magnified pop-out panel of a map — popoutArea","text":"shape original shape popoutShape mask shape. outer boundary shape used mask select original shape popoutPosition corner place popout NE,NW,SE SW popoutScale factor grow popout area . linear scale popout appear square factor bigger. nudgeX shift popout panel small amount (coordinate units) nudgeY shift popout panel small amount (coordinate units)","code":""},{"path":"https://terminological.github.io/arear/reference/popoutArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a magnified pop-out panel of a map — popoutArea","text":"new map content intersecting popout area duplicated,   expanded placed specified corner.","code":""},{"path":"https://terminological.github.io/arear/reference/popoutArea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a magnified pop-out panel of a map — popoutArea","text":"","code":"tmp = popoutArea(   arear::testdata$diamond11x11 %>% dplyr::mutate(value = x+y),   arear::testdata$offsetBox,   popoutPosition = \"NE\",   popoutScale = 1.25 ) #> although coordinates are longitude/latitude, st_union assumes that they are #> planar #> although coordinates are longitude/latitude, st_intersection assumes that they #> are planar #> Warning: attribute variables are assumed to be spatially constant throughout all geometries  ggplot2::ggplot(tmp)+   ggplot2::geom_sf(ggplot2::aes(fill=value))+   ggplot2::scale_fill_gradient2()+   ggplot2::geom_sf(data = arear::testdata$offsetBox, alpha=0)"},{"path":"https://terminological.github.io/arear/reference/preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Preview a map with POI using leaflet — preview","title":"Preview a map with POI using leaflet — preview","text":"Preview map POI using leaflet","code":""},{"path":"https://terminological.github.io/arear/reference/preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preview a map with POI using leaflet — preview","text":"","code":"preview(   shape,   shapeLabelGlue = \"{name}\",   shapePopupGlue = \"{code}\",   poi = NULL,   poiLabelGlue = \"{name}\",   poiPopupGlue = \"{code}\" )"},{"path":"https://terminological.github.io/arear/reference/preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preview a map with POI using leaflet — preview","text":"shape - map shapeLabelGlue - glue specification label shape shapePopupGlue - glue specification popup shape poi - list points interest sf object poiLabelGlue - glue specification label poi poiPopupGlue - glue specification popup poi","code":""},{"path":"https://terminological.github.io/arear/reference/preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preview a map with POI using leaflet — preview","text":"htmlwidget","code":""},{"path":"https://terminological.github.io/arear/reference/saveShapefile.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a `sf` as a shapefile to disk — saveShapefile","title":"Save a `sf` as a shapefile to disk — saveShapefile","text":"Save `sf` shapefile disk","code":""},{"path":"https://terminological.github.io/arear/reference/saveShapefile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a `sf` as a shapefile to disk — saveShapefile","text":"","code":"saveShapefile(shape, mapId, dir = getwd(), overwrite = FALSE)"},{"path":"https://terminological.github.io/arear/reference/saveShapefile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a `sf` as a shapefile to disk — saveShapefile","text":"shape sf shape mapId mapId - become zip filename, filename zipped `.shp` file dir directory (defaults current working directory) overwrite save function write existing files unless set true","code":""},{"path":"https://terminological.github.io/arear/reference/saveShapefile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a `sf` as a shapefile to disk — saveShapefile","text":"filename zipped shapefile","code":""},{"path":"https://terminological.github.io/arear/reference/saveShapefile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a `sf` as a shapefile to disk — saveShapefile","text":"","code":"if (interactive()) {   svc = \"https://services1.arcgis.com/ESMARspQHYMw9BZ9/ArcGIS/rest/services\"   fs = sprintf(\"%s/%s\",svc,\"Countries_December_2024_Boundaries_UK_BUC/FeatureServer\")   layer = sprintf(\"%s/%s\",fs,\"0\")   map = downloadGeojson(layer)   map %>% dplyr::glimpse()   map2 = map %>% standardiseMap(codeCol = CTRY24CD, nameCol = CTRY24NM)   map2 %>% dplyr::glimpse()   saveShapefile(map2, \"ctry24\", dir = tempdir()) }"},{"path":"https://terminological.github.io/arear/reference/standardiseMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise maps — standardiseMap","title":"Standardise maps — standardiseMap","text":"function renames `sf` minimal set attributes consistent naming `code`, `name` `codeType` columns optional `altCode` column. Renames columns lower case, makes sure `area` column calculated. also loses `Z` `M` layers.","code":""},{"path":"https://terminological.github.io/arear/reference/standardiseMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise maps — standardiseMap","text":"","code":"standardiseMap(   sf,   codeCol = \"code\",   nameCol = \"name\",   altCodeCol = NULL,   codeType = NA_character_,   ... )"},{"path":"https://terminological.github.io/arear/reference/standardiseMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise maps — standardiseMap","text":"sf non standard map codeCol name column containing id code nameCol name column containing label (optional - defaults codeCol) altCodeCol optional column name containing another code type codeType \"type\" code - optional. defaults NA ... used.","code":""},{"path":"https://terminological.github.io/arear/reference/standardiseMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise maps — standardiseMap","text":"standardised map exactly following columns: `code`, `codeType`,   `name`, `altCode`, `geometry` `area`","code":""},{"path":"https://terminological.github.io/arear/reference/standardiseMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise maps — standardiseMap","text":"","code":"# example code if (interactive()) {   svc = \"https://services1.arcgis.com/ESMARspQHYMw9BZ9/ArcGIS/rest/services\"   fs = sprintf(\"%s/%s\",svc,\"Countries_December_2024_Boundaries_UK_BUC/FeatureServer\")   layer = sprintf(\"%s/%s\",fs,\"0\")   map = downloadGeojson(layer)   map %>% dplyr::glimpse()   map2 = map %>% standardiseMap(codeCol = CTRY24CD, nameCol = CTRY24NM)   map2 %>% dplyr::glimpse() }"},{"path":"https://terminological.github.io/arear/reference/surgecapacity.html","id":null,"dir":"Reference","previous_headings":"","what":"Hospital surge capacity in COVID — surgecapacity","title":"Hospital surge capacity in COVID — surgecapacity","text":"Locations UK general medical hospitals mid march 2020 estimates beds available maximal surge capacity HDU beds. manually assembled curated various sources mid march 2020 NHS geared provide additional capacity cope surge COVID cases. date picture NHS capacity. include mental health community hospitals. surge capacity seems calculated quite differently Scotland.","code":""},{"path":"https://terminological.github.io/arear/reference/surgecapacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hospital surge capacity in COVID — surgecapacity","text":"","code":"surgecapacity"},{"path":"https://terminological.github.io/arear/reference/surgecapacity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hospital surge capacity in COVID — surgecapacity","text":"sf geometry : nation England, Wales, etc... hospitalId id hospital sector NHS independent hospitalName hospital name pcds UK postcode hospital trustId NHS trust local health board hospital trustName NHS trust local health board name tier1 indicator role hospital acure provider hduBeds number hdu beds hospital provided maximum surge March 2020 acuteBeds number acute beds hospital provided maximum surge March 2020","code":""},{"path":"https://terminological.github.io/arear/reference/testdata.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of regular lattice SF polygons used for testing purposes — testdata","title":"A list of regular lattice SF polygons used for testing purposes — testdata","text":"list regular lattice SF polygons used testing purposes","code":""},{"path":"https://terminological.github.io/arear/reference/testdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of regular lattice SF polygons used for testing purposes — testdata","text":"","code":"testdata"},{"path":"https://terminological.github.io/arear/reference/testdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of regular lattice SF polygons used for testing purposes — testdata","text":"list : grid5x5 5x5 grid centred 0,0 grid11x11 11x11 grid centred 0,0 diamond5x5 5x5 diagonal grid centred 0,0 diamond11x11 11x11 diagonal grid centred 0,0 gridDemand 11x11 grid demand parameter gridSupply 3 point supply gridSupply2 another 3 point supply 2 ids gridSupplyViolateConstraint 4 point supply 2 points grid square gridSupplyDegenerate 5 point supply 2 points grid square amd different 2 points id","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019adultpopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019adultpopulation","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019adultpopulation","text":"Small area single digit estimates aggregated include 18s, combining gender","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019adultpopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019adultpopulation","text":"","code":"uk2019adultpopulation"},{"path":"https://terminological.github.io/arear/reference/uk2019adultpopulation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019adultpopulation","text":"41740 line data frame: code ONS code ares name name area codeType type area (LSOA, DZ LGD) population size population","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019adultpopulation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019adultpopulation","text":"England Wales https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/lowersuperoutputareamidyearpopulationestimates Scotland https://www.nrscotland.gov.uk/statistics--data/statistics/statistics--theme/population/population-estimates/2011-based-special-area-population-estimates/small-area-population-estimates/time-series#2018 Northern Ireland https://www.opendatani.gov.uk/dataset/3333626e-b96e-4b90-82fb-474c6c03b868/resource/64bd8dc4-935f-4bdd-9232-90ff33f24732/","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019adultpopulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019adultpopulation","text":"Data available open government licence: http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019demographics.html","id":null,"dir":"Reference","previous_headings":"","what":"UK small area single year of age population estimates from 2019 — uk2019demographics","title":"UK small area single year of age population estimates from 2019 — uk2019demographics","text":"estimates appropriate majority pandemic, highest geographical resolution estimates single year age find.","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019demographics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK small area single year of age population estimates from 2019 — uk2019demographics","text":"","code":"uk2019demographics()"},{"path":"https://terminological.github.io/arear/reference/uk2019demographics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UK small area single year of age population estimates from 2019 — uk2019demographics","text":"dataframe age, gender, codeType, code, name count","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019demographicsmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Small area demographics map — uk2019demographicsmap","title":"Small area demographics map — uk2019demographicsmap","text":"Shape file related mid year 2019 small area estimates England, Wales, Scotland, Northern Ireland. see [uk2019demographics()]","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019demographicsmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small area demographics map — uk2019demographicsmap","text":"","code":"uk2019demographicsmap()"},{"path":"https://terminological.github.io/arear/reference/uk2019demographicsmap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Small area demographics map — uk2019demographicsmap","text":"England Wales https://geoportal.statistics.gov.uk/datasets/lower-layer-super-output-areas-december-2011-boundaries-ew-bgc Scotland https://data.gov.uk/dataset/ab9f1f20-3b7f-4efa-9bd2-239acf63b540/data-zone-boundaries-2011 Northern Ireland https://data.gov.uk/dataset/05f72866-b72b-476a-b6f3-57bd4a768674/osni-open-data-largescale-boundaries-local-government-districts-2012","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019demographicsmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Small area demographics map — uk2019demographicsmap","text":"41730 line data frame: code ONS code ares name name area codeType type area (LSOA, DZ LGD) altCode NA","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019demographicsmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Small area demographics map — uk2019demographicsmap","text":"10 regions (mostly Scotland) demographics estimates align map. small number people. Data available open government licence: http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019retiredpopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019retiredpopulation","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019retiredpopulation","text":"Small area single digit estimates aggregated include 65s, combining gender.","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019retiredpopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019retiredpopulation","text":"","code":"uk2019retiredpopulation"},{"path":"https://terminological.github.io/arear/reference/uk2019retiredpopulation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019retiredpopulation","text":"41730 line data frame: code ONS code ares name name area codeType type area (LSOA, DZ LGD) population size population","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019retiredpopulation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019retiredpopulation","text":"England Wales https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/lowersuperoutputareamidyearpopulationestimates Scotland https://www.nrscotland.gov.uk/statistics--data/statistics/statistics--theme/population/population-estimates/2011-based-special-area-population-estimates/small-area-population-estimates/time-series#2018 Northern Ireland https://www.opendatani.gov.uk/dataset/3333626e-b96e-4b90-82fb-474c6c03b868/resource/64bd8dc4-935f-4bdd-9232-90ff33f24732/","code":""},{"path":"https://terminological.github.io/arear/reference/uk2019retiredpopulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mid year 2019 small area estimates for adult population of England, Wales, Scotland, and Northern Ireland — uk2019retiredpopulation","text":"Data available open government licence: http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/","code":""},{"path":"https://terminological.github.io/arear/reference/ukconnections.html","id":null,"dir":"Reference","previous_headings":"","what":"Locations of UK bridge or ferry route start and end points — ukconnections","title":"Locations of UK bridge or ferry route start and end points — ukconnections","text":"geographical location bridges / ferries UK connections. picked https://developers.google.com/maps/documentation/javascript/examples/event-click-latlng#maps_event_click_latlng-html","code":""},{"path":"https://terminological.github.io/arear/reference/ukconnections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locations of UK bridge or ferry route start and end points — ukconnections","text":"","code":"ukconnections"},{"path":"https://terminological.github.io/arear/reference/ukconnections.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Locations of UK bridge or ferry route start and end points — ukconnections","text":"dataframe : name connection start.lat latitude one end start.long longditude one end end.lat latitude end end.long longditude end","code":""},{"path":"https://terminological.github.io/arear/reference/ukcovidmap.html","id":null,"dir":"Reference","previous_headings":"","what":"COVID reporting map — ukcovidmap","title":"COVID reporting map — ukcovidmap","text":"Shape file related detailed level PHE coronavirus statistical reporting England, Wales, Scotland, Northern Ireland coronavirus.gov.uk tracker. legacy level detailed data reported first wave, prior API aggregated https://github.com/tomwhite/covid-19-uk-data","code":""},{"path":"https://terminological.github.io/arear/reference/ukcovidmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"COVID reporting map — ukcovidmap","text":"","code":"ukcovidmap(legacy = FALSE)"},{"path":"https://terminological.github.io/arear/reference/ukcovidmap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"COVID reporting map — ukcovidmap","text":"England, Wales, Scotland & NI - LAD19 https://geoportal.statistics.gov.uk/datasets/local-authority-districts-december-2019-boundaries-uk-buc England & Wales - LAD19 https://geoportal.statistics.gov.uk/datasets/local-authority-districts-december-2019-boundaries-uk-buc Scotland - CA19 https://www.spatialdata.gov.scot/geonetwork/srv/eng/catalog.search#/metadata/1cd57ea6-8d6e-412b-a9dd-d1c89a80ad62 Northern Ireland  -LGD12 https://data.gov.uk/dataset/05f72866-b72b-476a-b6f3-57bd4a768674/osni-open-data-largescale-boundaries-local-government-districts-2012","code":""},{"path":"https://terminological.github.io/arear/reference/ukcovidmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"COVID reporting map — ukcovidmap","text":"legacy use legacy version map pre coronavirus api times.","code":""},{"path":"https://terminological.github.io/arear/reference/ukcovidmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"COVID reporting map — ukcovidmap","text":"382 line data frame (335 line data frame legacy): code ONS code ares name name area codeType type area (LAD19) altCode NA","code":""},{"path":"https://terminological.github.io/arear/reference/ukcovidmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"COVID reporting map — ukcovidmap","text":"map matches data reported PHE coronavirus api downloading lower tier local authority regions e.g. via https://api.coronavirus.data.gov.uk/v2/data?areaType=ltla&metric=newCasesBySpecimenDate&format=csv API now discontinued. 2 regions data reported API - city London & Isles Scilly. Data available open government licence: http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/","code":""}]
